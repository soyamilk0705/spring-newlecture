<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 1. PointCut을 만들고 결합하는 작업 : 이름을 기준으로 하는 포인트컷 -->
	<!-- <bean id="classicPointCut" class="org.springframework.aop.support.NameMatchMethodPointcut" >
		<property name="mappedName" value="total" />	
	</bean>
	
	<bean id="classicBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"></property>
		<property name="pointcut" ref="classicPointCut"></property>
	</bean>
	 
	 <bean id="classicAroundAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logAroundAdvice"></property>
		<property name="pointcut" ref="classicPointCut"></property>
	</bean>-->
	 
	
	<!-- 2. Advisor가 PointCut 기능을 설정 : PointCut과 Advisor 합침 -->
	<!-- <bean id="classicBeforeAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"></property>
		<property name="mappedNames">
			<list>
				<value>total</value>
				<value>avg</value>
			</list>
		</property>
	</bean> -->
	
	<bean id="classicAroundAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logAroundAdvice"></property>
		<property name="mappedName" value="total"></property>
	</bean>
	
	<!-- 3. 패턴(정규식)을 이용한 Advisor -->
	<bean id="classicBeforeAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice" ref="logBeforeAdvice"></property>
		<property name="patterns">
			<list>
				<value>.*to.*</value>
			</list>
		</property>
	</bean>
	
	

	<!-- 주업무 -->
	<bean id="target" class="spring.aop.entity.NewlecExam" p:kor="1" p:eng="1" p:math="1" p:com="1"></bean>
	<!-- 부가적인 업무 -->
	<bean id="logAroundAdvice" class="spring.aop.advice.LogAroundAdvice" />
	<bean id="logBeforeAdvice" class="spring.aop.advice.LogBeforeAdvice" />
	<bean id="logAfterReturningAdvice" class="spring.aop.advice.LogAfterReturningAdvice" />
	<bean id="logAfterThrowingAdvice" class="spring.aop.advice.LogAfterThrowingAdvice" />
	<!-- aop -->
	<bean id="exam" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="target" />
		<property name="interceptorNames">
			<list>
				<!-- <value>logAroundAdvice</value> -->
				<value>classicAroundAdvisor</value>	<!-- pointCut이 설정된 advice -->
				<!-- <value>logBeforeAdvice</value> -->
				<value>classicBeforeAdvisor</value>
				<value>logAfterReturningAdvice</value>
				<value>logAfterThrowingAdvice</value>
			</list>
		</property>
	</bean>


	
	
</beans>
